name: release-please

on:
  push:
    branches:
      - main

jobs:
  release-please:
    runs-on: windows-latest
    steps:
      - name: Run release-please
        uses: GoogleCloudPlatform/release-please-action@v4
        id: release_please
        with:
          release-type: rust

      - name: Checkout code
        uses: actions/checkout@v4
        if: ${{ !steps.release_please.outputs.release_created }}

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
          components: clippy
        if: ${{ !steps.release_please.outputs.release_created }}

      #- name: Run Clippy
      #  # uses: actions-rs/clippy-check@v1
      #  uses: ErichDonGubler/clippy-check@6723b97308d5e57f643a52398b9e5121813b5834
      #  with:
      #    token: ${{ secrets.GITHUB_TOKEN }}
      #    args: --all-features
      #  if: ${{ !steps.release_please.outputs.release_created }}

      - name: RELEASE - Checkout code
        uses: actions/checkout@v4
        if: ${{ steps.release_please.outputs.release_created }}

      - name: RELEASE - Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
        if: ${{ steps.release_please.outputs.release_created }}

      - name: RELEASE - Cargo build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --locked --release
        if: ${{ steps.release_please.outputs.release_created }}

      - name: Print release-please outputs
        run: |
          echo "Release created: ${{ steps.release_please.outputs.release_created }}"
          echo "Tag name: ${{ steps.release_please.outputs.tag_name }}"
          echo "major: ${{ steps.release_please.outputs.major }}"
          echo "minor: ${{ steps.release_please.outputs.minor }}"
          echo "patch: ${{ steps.release_please.outputs.patch }}"

      - name: 'RELEASE - Create Zip'
        run: |
          mkdir -p artifacts
          Get-ChildItem -Path "." -Recurse
          Compress-Archive -Path target/release/hello.exe -Destination artifacts/hello.zip
          Compress-Archive -Path LICENSE -Update -Destination artifacts/hello.zip
          Compress-Archive -Path README.md -Update -Destination artifacts/hello.zip
          Compress-Archive -Path CHANGELOG.md -Update -Destination artifacts/hello.zip
        if: ${{ steps.release_please.outputs.release_created }}

      - name: RELEASE - Upload release asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.release_please.outputs.upload_url }}
          asset_path: artifacts/hello.zip
          asset_name: hello-${{ steps.release_please.outputs.major }}.${{ steps.release_please.outputs.minor }}.${{ steps.release_please.outputs.patch }}.zip
          asset_content_type: application/octet-stream
        if: ${{ steps.release_please.outputs.release_created }}
